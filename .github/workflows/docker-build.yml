name: Docker Build and Push

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_HUB_REGISTRY: docker.io
  DOCKER_HUB_IMAGE: terrysiu/api-proxy

# 添加全局权限配置
permissions: 
  contents: write
  packages: write

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          # 获取最新tag，如果没有则设为1.0.0
          latest_tag=$(git tag -l 'v*' | sort -V | tail -n 1)
          if [ -z "$latest_tag" ]; then
            echo "version=v1.0.0" >> $GITHUB_OUTPUT
          else
            # 提取版本号并递增
            current_version=${latest_tag#v}
            IFS='.' read -r major minor patch <<< "$current_version"
            new_patch=$((patch + 1))
            new_version="v$major.$minor.$new_patch"
            echo "version=$new_version" >> $GITHUB_OUTPUT
          fi

      - name: Create new tag
        run: |
          git tag ${{ steps.get_latest_tag.outputs.version }}
          git push origin ${{ steps.get_latest_tag.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_HUB_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_HUB_REGISTRY }}/${{ env.DOCKER_HUB_IMAGE }}:latest
            ${{ env.DOCKER_HUB_REGISTRY }}/${{ env.DOCKER_HUB_IMAGE }}:${{ steps.get_latest_tag.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_latest_tag.outputs.version }}
          generate_release_notes: true